<html>
<head>
    <title>React App Demo</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
</head>

<body>

<div id="root"></div>
<script type="text/babel">
    // define your sub components here

    const Film = props => {
        return (
            <div className ="mainlist"> 
                <h2> Select a film to learn more about it </h2>
                    <ul> 
                    {props.filmArray.map((film){
                        <li key={film._id}><a href="#" onClick={props.selected}> {film.title}</a></li>
                    })}
                    </ul>
            </div>
        )
    };

  const FilmDetails = props => {
    return (
      <div className="sidebar">
        <h2> Film Details for {props.current.title || "selected movie:"} </h2>
        
        <form> 
          Title: <input onChange={props.edit} type="text" name="title" value={props.current.title ||""} /> <br/>
          Dir: <input onChange={props.edit} type="text" name="Dir" value={props.current.Dir ||""} /> <br/>
          Year: <input onChange={props.edit} type="text" name="year" value={props.current.year ||""} /> <br/>
          Oscars: <input onChange={props.edit} type="text" name="Oscars" value={props.current.Oscars ||""} />
          </form>

          <button onClick={props.reset}>Clear </button>
          <button onClick={props.delete}>Delete</button>
          <button onClick={props.save}>Save</button>
          <div id="status"> </div>
        </div>
    )
  }

    class App extends React.Component{
      constructor(props){
          super(props);
          // Set initial state using data from server application
          this.state = {
            films: {{{ films }}},
            currentFilm: { } // current selected item
          };
          this.selectItem = this.selectItem.bind(this);
          this.resetCurrent = this.resetCurrent.bind(this);
          this.handleDelete = this.handleDelete.bind(this);
          //this.handleEdit = this.handleEdit.bind(this);
          //this.handleSave = this.handleSave.bind(this);

       }

      // handle list item clicked
      selectItem(event) {
        event.preventDefault(); //need this keeps messing up
        const film = this.state.film.find(film => event.target.text === film.title);
        this.setState({currentFilm: film})
        ReactDOM.render(<h2></h2>, document.getElementById('status'));
        // event.target is the HTML item clicked
        console.log(event.target.innerText);
      }

      handleEdit(event){
        let newFilm = this.state.currentFilm;
        //newFilm[event.target.name] = event.target.value;
        this.setState({currentFilm: newFilm});
      }

      handleDelete(event){
        fetch(`/api/films/delete/${this.state.currentFilm.title}`)
          .then((response)=> {
          console.log(response);
          return response.json();
          })
          .then((result) => {
            this.setState({film: [...this.state.film.filter(film => film.title !==this.state.currentFilm.title)]});
            ReactDOM.render(<h2 className="conf">"{this.state.currentFilm}" deleted </h2>, document.getElementById('status'));
            this.resetCurrent();
          })
          .catch(err => console.log(err))
    }

  resetCurrent() {
      this.setState({currentFilm: {} })
    }

    render() {            
      return (

        <div id="display" className="wrapper"> 

          <h2> Oscar Film List </h2>
          
            <Film filmArray={this.state.film} selected={event => this.selectItem(event)}/>

              <FilmDetails 
              current={this.state.currentFilm}
              reset={() => this.resetCurrent()}
              edit={this.handleEdit}
              delete={this.handleDelete}
              //save={this.handleSave}
          />

        </div>
      );
    }

    ReactDOM.render(<App />, document.getElementById('root'));

</script>
</body>
</html>